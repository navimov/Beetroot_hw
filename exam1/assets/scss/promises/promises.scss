@mixin respond-to($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 599px) {
      @content;
    }
  } @else if $breakpoint == tablet {
    @media only screen and (min-width: 600px) and (max-width: 899px) {
      @content;
    }
  } @else if $breakpoint == desktop {
    @media only screen and (min-width: 900px) {
      @content;
    }
  }
}
.promises {
  @include respond-to(tablet) {
    flex-direction: column;
  }
  @include respond-to(phone) {
    flex-direction: column;
  }
  position: relative;
  height: fit-content;
  width: 100%;
  display: flex;
  align-items: center;
  &__text {
    @include respond-to(tablet) {
      right: 0;
      width: 100%;
    }
    @include respond-to(phone) {
      right: 0;
      width: 100%;
    }
    position: relative;
    width: 770px;
    height: 450px;
    right: 16%;
    padding-left: 70px;
    background-color: rgba(12, 16, 35, 0.8);
    display: flex;
    align-items: center;
  }
  &__text_title {
    font-family: "PlayfairDisplay";
    font-size: 24px;
    line-height: 48px;
  }
  &__text_button-container {
    @include respond-to(tablet) {
      width: 200px;
    }
    @include respond-to(phone) {
      width: 100px;
    }
    position: relative;
    width: 300px;
    height: 90px;
    border: 1px solid #fff;
  }

  &__text-wrapper {
    @include respond-to(tablet) {
      width: 100%;
    }
    @include respond-to(phone) {
      grid-template-columns: 1fr;
      grid-template-rows: 1fr 1fr 1fr 1fr;
      width: 100%;
    }
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    gap: 83px 100px;
    width: 700px;
    height: 300px;
  }
  &__description_margin {
    margin-top: 7px;
    line-height: 33px;
  }
  &__text_container:nth-child(3) {
    position: relative;
    top: -17px;
  }
}
.link__promises {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}
.promises__text_button-container:hover {
  border-color: var(--button-hover-color);
}
